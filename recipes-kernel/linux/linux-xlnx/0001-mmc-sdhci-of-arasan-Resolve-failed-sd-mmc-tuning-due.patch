From 73d0f6986b7d0c3277fec3e2d2a1344c0489f7e3 Mon Sep 17 00:00:00 2001
From: Mike Looijmans <mike.looijmans@topic.nl>
Date: Tue, 17 Nov 2020 10:20:58 +0100
Subject: [PATCH] mmc: sdhci-of-arasan: Resolve failed sd/mmc tuning due to
 invalid code

Assigning set of default tapdelays with macros caused sd/emmc tuning
to fail. Implement properly with integer arrays.
---
 drivers/mmc/host/sdhci-of-arasan.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/drivers/mmc/host/sdhci-of-arasan.c b/drivers/mmc/host/sdhci-of-arasan.c
index 36d774eb8d0e..4af3efed2e7d 100644
--- a/drivers/mmc/host/sdhci-of-arasan.c
+++ b/drivers/mmc/host/sdhci-of-arasan.c
@@ -43,11 +43,11 @@
 #define SDHCI_OTAPDLY_ENABLE		0x40
 
 /* Default settings for ZynqMP Clock Phases */
-#define ZYNQMP_ICLK_PHASE {0, 63, 63, 0, 63,  0,   0, 183, 54,  0, 0}
-#define ZYNQMP_OCLK_PHASE {0, 72, 60, 0, 60, 72, 135, 48, 72, 135, 0}
+static const u32 ZYNQMP_ICLK_PHASE[] = {0, 63, 63, 0, 63,  0,   0, 183, 54,  0, 0};
+static const u32 ZYNQMP_OCLK_PHASE[] = {0, 72, 60, 0, 60, 72, 135, 48, 72, 135, 0};
 
-#define VERSAL_ICLK_PHASE {0, 132, 132, 0, 132, 0, 0, 162, 90, 0, 0}
-#define VERSAL_OCLK_PHASE {0,  60, 48, 0, 48, 72, 90, 36, 60, 90, 0}
+static const u32 VERSAL_ICLK_PHASE[] = {0, 132, 132, 0, 132, 0, 0, 162, 90, 0, 0};
+static const u32 VERSAL_OCLK_PHASE[] = {0,  60, 48, 0, 48, 72, 90, 36, 60, 90, 0};
 
 /*
  * On some SoCs the syscon area has a feature where the upper 16-bits of
@@ -1135,8 +1135,8 @@ static void arasan_dt_parse_clk_phases(struct device *dev,
 	clk_data->set_clk_delays = sdhci_arasan_set_clk_delays;
 
 	if (of_device_is_compatible(dev->of_node, "xlnx,zynqmp-8.9a")) {
-		iclk_phase = (int [MMC_TIMING_MMC_HS400 + 1]) ZYNQMP_ICLK_PHASE;
-		oclk_phase = (int [MMC_TIMING_MMC_HS400 + 1]) ZYNQMP_OCLK_PHASE;
+		iclk_phase = ZYNQMP_ICLK_PHASE;
+		oclk_phase = ZYNQMP_OCLK_PHASE;
 
 		of_property_read_u32(dev->of_node, "xlnx,mio-bank", &mio_bank);
 		if (mio_bank == 2) {
@@ -1151,8 +1151,8 @@ static void arasan_dt_parse_clk_phases(struct device *dev,
 	}
 
 	if (of_device_is_compatible(dev->of_node, "xlnx,versal-8.9a")) {
-		iclk_phase = (int [MMC_TIMING_MMC_HS400 + 1]) VERSAL_ICLK_PHASE;
-		oclk_phase = (int [MMC_TIMING_MMC_HS400 + 1]) VERSAL_OCLK_PHASE;
+		iclk_phase = VERSAL_ICLK_PHASE;
+		oclk_phase = VERSAL_OCLK_PHASE;
 
 		for (i = 0; i <= MMC_TIMING_MMC_HS400; i++) {
 			clk_data->clk_phase_in[i] = iclk_phase[i];
-- 
2.17.1

