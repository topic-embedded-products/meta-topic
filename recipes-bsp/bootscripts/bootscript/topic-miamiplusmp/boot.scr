setenv bootargs $bootargs coherent_pool=512k reset_reason=${reset_reason}
i2c dev 1
if test "${devtype}" = "mmc"; then
	echo "Loading kernel from mmc ${devnum}:${devplist}..."
	if ext4load ${devtype} ${devnum}:${devplist} ${fdt_addr_r} /boot/system.dtb && ext4load ${devtype} ${devnum}:${devplist} ${kernel_addr_r} /boot/Image; then
		fdt addr ${fdt_addr_r}
		if i2c probe 38; then
			echo "Board v1r0"
			fdt set /amba/i2c@ff030000/pcal9554@20 reg <0x38>
			fdt set /amba/i2c@ff030000/pcal9554@20 compatible nxp,pca9554
		else
			i2c mw 20 43 e0
			if gpio input gpio@20_7
			then
				echo "Board v1r2"
				fdt rm /amba/i2c@ff030000/pcal9554@20/eth-clk-sw-ctrl output-low
				fdt set /amba/i2c@ff030000/pcal9554@20/eth-clk-sw-ctrl/output-high
				fdt set /xtal_50_clock/clock-frequency <38880000>
				fdt set /amba/i2c@ff030000/si5345@68/silabs,pll-m-den <3888>
				fdt set /amba/i2c@ff030000/si5345@68/silabs,pll-m-num <1400000>
			else
				echo "Board v1r1"
			fi
		fi
		setenv bootargs $bootargs root=/dev/mmcblk${devnum}p${devplist} rw rootwait
		echo "Booting..."
		booti ${kernel_addr_r} - ${fdt_addr_r}
	else
		echo "Load from mmc ${devnum}:${devplist} failed, aborting mmc boot..."
	fi;
elif test "${devtype}" = "ubi"; then
	echo "Loading kernel from UBIFS..."
	if ubifsload ${fdt_addr_r} /boot/system.dtb && ubifsload ${kernel_addr_r} /boot/Image; then
		echo "Load from UBIFS succeeded"
		fdt addr ${fdt_addr_r}
		if i2c probe 38; then
			echo "Board v1r0"
			fdt set /amba/i2c@ff030000/pcal9554@20 reg <0x38>
			fdt set /amba/i2c@ff030000/pcal9554@20 compatible nxp,pca9554
		else
			i2c mw 20 43 e0
			if gpio input gpio@20_7
			then
				echo "Board v1r2"
				fdt rm /amba/i2c@ff030000/pcal9554@20/eth-clk-sw-ctrl output-low
				fdt set /amba/i2c@ff030000/pcal9554@20/eth-clk-sw-ctrl/output-high
				fdt set /xtal_50_clock/clock-frequency <38880000>
				fdt set /amba/i2c@ff030000/si5345@68/silabs,pll-m-den <3888>
				fdt set /amba/i2c@ff030000/si5345@68/silabs,pll-m-num <1400000>
			else
				echo "Board v1r1"
			fi
		fi
		setenv bootargs $bootargs ubi.mtd=3 root=ubi0:qspi-rootfs rootfstype=ubifs rw rootwait
		booti ${kernel_addr_r} - ${fdt_addr_r}
	else
		echo "Load from UBIFS failed, aborting UBIFS boot..."
	fi;
fi;
