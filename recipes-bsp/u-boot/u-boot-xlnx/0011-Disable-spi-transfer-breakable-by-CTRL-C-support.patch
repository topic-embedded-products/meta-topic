From 845648e0237d9dc42837c283c49a0ea2ac63828d Mon Sep 17 00:00:00 2001
From: Leon Leijssen <leon.leijssen@topic.nl>
Date: Fri, 7 Feb 2020 11:52:51 +0100
Subject: [PATCH 11/34] Disable spi transfer breakable by CTRL C support

The spi transfers during boot are consuming the serial port
characters which prevent the bootloader to be entered when
bootdelay is set to 0
---
 drivers/spi/zynqmp_gqspi.c | 57 ++++++++++++++++++--------------------
 1 file changed, 27 insertions(+), 30 deletions(-)

diff --git a/drivers/spi/zynqmp_gqspi.c b/drivers/spi/zynqmp_gqspi.c
index a65e22d1b9..b68c40daaf 100644
--- a/drivers/spi/zynqmp_gqspi.c
+++ b/drivers/spi/zynqmp_gqspi.c
@@ -301,7 +301,6 @@ static void zynqmp_qspi_fill_gen_fifo(struct zynqmp_qspi_priv *priv,
 	int ret = 0;
 
 	writel(gqspi_fifo_reg, &regs->genfifo);
-
 	config_reg = readl(&regs->confr);
 	/* Manual start if needed */
 	config_reg |= GQSPI_STRT_GEN_FIFO;
@@ -317,6 +316,7 @@ static void zynqmp_qspi_fill_gen_fifo(struct zynqmp_qspi_priv *priv,
 				GQSPI_TIMEOUT, 1);
 	if (ret)
 		printf("%s Timeout\n", __func__);
+
 }
 
 static void zynqmp_qspi_chipselect(struct zynqmp_qspi_priv *priv, int is_on)
@@ -340,6 +340,7 @@ static void zynqmp_qspi_chipselect(struct zynqmp_qspi_priv *priv, int is_on)
 
 	debug("GFIFO_CMD_CS: 0x%x\n", gqspi_fifo_reg);
 
+
 	zynqmp_qspi_fill_gen_fifo(priv, gqspi_fifo_reg);
 }
 
@@ -526,10 +527,10 @@ static int zynqmp_qspi_fill_tx_fifo(struct zynqmp_qspi_priv *priv, u32 size)
 	debug("TxFIFO: 0x%x, size: 0x%x\n", readl(&regs->isr),
 	      size);
 
-	/* Enable interrupts */
-	ier = readl(&regs->ier);
+		/* Enable interrupts */
+		ier = readl(&regs->ier);
 	ier |= GQSPI_IXR_ALL_MASK | GQSPI_IXR_TXFIFOEMPTY_MASK;
-	writel(ier, &regs->ier);
+		writel(ier, &regs->ier);
 
 	while (size) {
 		ret = wait_for_bit_le32(&regs->isr, GQSPI_IXR_TXNFULL_MASK, 1,
@@ -572,7 +573,6 @@ static int zynqmp_qspi_fill_tx_fifo(struct zynqmp_qspi_priv *priv, u32 size)
 		printf("%s: Timeout\n", __func__);
 		return ret;
 	}
-
 	priv->tx_buf += len;
 	return 0;
 }
@@ -752,42 +752,40 @@ static int zynqmp_qspi_start_dma(struct zynqmp_qspi_priv *priv,
 
 		totallen -= priv->len; /* Save remaining bytes length to read */
 		actuallen = priv->len; /* Actual number of bytes reading */
+	writel((unsigned long)buf, &dma_regs->dmadst);
+	writel(roundup(priv->len, GQSPI_DMA_ALIGN), &dma_regs->dmasize);
+	writel(GQSPI_DMA_DST_I_STS_MASK, &dma_regs->dmaier);
+	addr = (unsigned long)buf;
+	size = roundup(priv->len, GQSPI_DMA_ALIGN);
+	flush_dcache_range(addr, addr + size);
 
-		writel((unsigned long)buf, &dma_regs->dmadst);
-		writel(roundup(priv->len, GQSPI_DMA_ALIGN), &dma_regs->dmasize);
-		writel(GQSPI_DMA_DST_I_STS_MASK, &dma_regs->dmaier);
-		addr = (unsigned long)buf;
-		size = roundup(priv->len, GQSPI_DMA_ALIGN);
-		flush_dcache_range(addr, addr + size);
-
-		while (priv->len) {
-			zynqmp_qspi_calc_exp(priv, &gen_fifo_cmd);
-			zynqmp_qspi_fill_gen_fifo(priv, gen_fifo_cmd);
+	while (priv->len) {
+		zynqmp_qspi_calc_exp(priv, &gen_fifo_cmd);
+		zynqmp_qspi_fill_gen_fifo(priv, gen_fifo_cmd);
 
-			debug("GFIFO_CMD_RX:0x%x\n", gen_fifo_cmd);
-		}
+		debug("GFIFO_CMD_RX:0x%x\n", gen_fifo_cmd);
+	}
 
 		ret = wait_for_bit_le32(&dma_regs->dmaisr,
 					GQSPI_DMA_DST_I_STS_DONE, 1,
-					GQSPI_TIMEOUT, 1);
-		if (ret) {
-			printf("DMA Timeout:0x%x\n", readl(&dma_regs->dmaisr));
-			return -ETIMEDOUT;
-		}
+					GQSPI_TIMEOUT, 0);
+	if (ret) {
+		printf("DMA Timeout:0x%x\n", readl(&dma_regs->dmaisr));
+		return -ETIMEDOUT;
+	}
 
-		writel(GQSPI_DMA_DST_I_STS_DONE, &dma_regs->dmaisr);
+	writel(GQSPI_DMA_DST_I_STS_DONE, &dma_regs->dmaisr);
 
-		debug("buf:0x%lx, rxbuf:0x%lx, *buf:0x%x len: 0x%x\n",
-		      (unsigned long)buf, (unsigned long)priv->rx_buf, *buf,
-		      actuallen);
+	debug("buf:0x%lx, rxbuf:0x%lx, *buf:0x%x len: 0x%x\n",
+	      (unsigned long)buf, (unsigned long)priv->rx_buf, *buf,
+	      actuallen);
 
-		if (buf != priv->rx_buf)
-			memcpy(priv->rx_buf, buf, actuallen);
+	if (buf != priv->rx_buf)
+		memcpy(priv->rx_buf, buf, actuallen);
 
 		buf = (u32 *)((u8 *)buf + actuallen);
 		priv->rx_buf = (u8 *)priv->rx_buf + actuallen;
 	}
-
 	return 0;
 }
 
@@ -870,7 +868,6 @@ static bool zynqmp_qspi_update_stripe(const struct spi_mem_op *op)
 		return true;
 	}
 }
-
 static int zynqmp_qspi_exec_op(struct spi_slave *slave,
 			       const struct spi_mem_op *op)
 {
-- 
2.17.1

