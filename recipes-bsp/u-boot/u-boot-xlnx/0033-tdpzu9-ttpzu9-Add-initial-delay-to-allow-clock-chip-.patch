From 086182d4d1483809da8dedcda36f9a18e68bc6ba Mon Sep 17 00:00:00 2001
From: Mike Looijmans <mike.looijmans@topic.nl>
Date: Fri, 8 Jan 2021 15:14:21 +0100
Subject: [PATCH 33/34] tdpzu9, ttpzu9: Add initial delay to allow clock chip
 to initialize

The Si5341 clock takes a while to initialize and when booting from QSPI the
clock isn't up yet. Attempts to monitor PLL lock status did not work, so just
delay for a few milliseconds when boot mode is QSPI and an external reset
was active.

This fixes that ethernet and PCIe did not work when booting from QSPI. When
booting from SD or eMMC the ROM spends enough time communicating with the
storage device to allow the clock to be up and running when the GTP PLLs
are configured.
---
 .../zynqmp/zynqmp-topic-tdpzu9/psu_init_gpl.c | 20 +++++++++++++++++++
 .../zynqmp/zynqmp-topic-ttpzu9/psu_init_gpl.c | 20 +++++++++++++++++++
 2 files changed, 40 insertions(+)

diff --git a/board/topic/zynqmp/zynqmp-topic-tdpzu9/psu_init_gpl.c b/board/topic/zynqmp/zynqmp-topic-tdpzu9/psu_init_gpl.c
index 0afd844dfa..c6775bfc51 100644
--- a/board/topic/zynqmp/zynqmp-topic-tdpzu9/psu_init_gpl.c
+++ b/board/topic/zynqmp/zynqmp-topic-tdpzu9/psu_init_gpl.c
@@ -1027,12 +1027,32 @@ static void topic_fixups(void)
 	psu_mask_write(0xFF18035C, 0x00010001U, 0x00010001U);
 }
 
+static void delay_if_boot_from_qspi()
+{
+	/* determine bootmode */
+	unsigned int reg = Xil_In32(0xFF5E0200) & 0x7;
+	if (reg != 2)
+		return;
+
+	/* Determine reset reason, only delay on external reset */
+	reg = Xil_In32(0xFF5E0220);
+	if (!(reg & 0x1))
+		return;
+
+	/* When booting from QSPI, the clock may not be up yet. Delay a few ms
+	 * to give it time to start up. */
+	static volatile int repeat = 100000;
+	while (repeat != 0)
+		--repeat;
+}
+
 int psu_init(void)
 {
 	int status = 1;
 
 	status &= psu_mio_init_data();
 	status &= psu_peripherals_pre_init_data();
+	delay_if_boot_from_qspi();
 	status &= psu_pll_init_data();
 	status &= psu_clock_init_data();
 	status &= psu_ddr_init_data();
diff --git a/board/topic/zynqmp/zynqmp-topic-ttpzu9/psu_init_gpl.c b/board/topic/zynqmp/zynqmp-topic-ttpzu9/psu_init_gpl.c
index 05eda01fb6..8a63db3844 100644
--- a/board/topic/zynqmp/zynqmp-topic-ttpzu9/psu_init_gpl.c
+++ b/board/topic/zynqmp/zynqmp-topic-ttpzu9/psu_init_gpl.c
@@ -1016,12 +1016,32 @@ static void init_peripheral(void)
 	psu_mask_write(0xFD5F0018, 0x8000001FU, 0x8000001FU);
 }
 
+static void delay_if_boot_from_qspi()
+{
+	/* determine bootmode */
+	unsigned int reg = Xil_In32(0xFF5E0200) & 0x7;
+	if (reg != 2)
+		return;
+
+	/* Determine reset reason, only delay on external reset */
+	reg = Xil_In32(0xFF5E0220);
+	if (!(reg & 0x1))
+		return;
+
+	/* When booting from QSPI, the clock may not be up yet. Delay a few ms
+	 * to give it time to start up. */
+	static volatile int repeat = 100000;
+	while (repeat != 0)
+		--repeat;
+}
+
 int psu_init(void)
 {
 	int status = 1;
 
 	status &= psu_mio_init_data();
 	status &= psu_peripherals_pre_init_data();
+	delay_if_boot_from_qspi();
 	status &= psu_pll_init_data();
 	status &= psu_clock_init_data();
 	status &= psu_ddr_init_data();
-- 
2.17.1

