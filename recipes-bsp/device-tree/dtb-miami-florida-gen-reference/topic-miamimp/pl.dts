/* Overlay devicetree for the programmable logic part of the florida-gen board */
/dts-v1/;
/plugin/;

#include <dt-bindings/input/input.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/phy/phy.h>
#include <dt-bindings/clock/xlnx-zynqmp-clk.h>

/ {
	/* This fragment causes the FPGA image to load */
	fragment@0 {
		target = <&fpga_full>;
		__overlay__ {
			firmware-name = "fpga.bin.fpga-image-pr-reference";
		};
	};

	fragment@1 {
		/* On-board push buttons connected to EMIO GPIO 4 and 5 in reference design */
		target-path = "/";
		__overlay__ {
			gpio-keys-emio {
				compatible = "gpio-keys";
				/* On-board push buttons in reference design */
				s2 {
					label = "s2";
					gpios = <&gpio 95 1>; /* EMIO 17, active low */
					linux,code = <60>; /* KEY_F2 */
					gpio-key,wakeup;
				};
				s3 {
					label = "s3";
					gpios = <&gpio 96 1>; /* EMIO 18, active low */
					linux,code = <61>; /* KEY_F3 */
					gpio-key,wakeup;
				};
			};
		};
	};

	fragment@2 {
		target = <&i2cmux_0>;
		__overlay__ {
			#address-cells = <1>;
			#size-cells = <0>;
			/* HDMI OUT */
			adv7511: adv7511@39 {
				compatible = "adi,adv7511";
				reg = <0x39>, <0x3f>;
				reg-names = "primary", "edid";
				adi,input-depth = <8>;
				adi,input-colorspace = "rgb";
				adi,input-clock = "1x";
				adi,input-style = <1>;
				adi,input-justification = "right";
				adi,clock-delay = <0>;
				#sound-dai-cells = <0>;

				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						adv7511_in: endpoint {
							remote-endpoint = <&axi_hdmi_out>;
						};
					};
					port@1 {
						reg = <1>; /* HDMI monitor */
					};
					port@2 {
						reg = <2>; /* Audio link */
					};
				};
			};
		};
	};

	fragment@3 {
		target = <&i2cmux_3>;
		__overlay__ {
			#address-cells = <1>;
			#size-cells = <0>;
			/* HDMI IN */
			adv7611@4c {
				compatible = "adi,adv7611";
				reg = <0x4c>;
				#address-cells = <0x1>;
				#size-cells = <0x0>;
				interrupt-parent = <&gpio>;
				interrupts = <99 4>; /* EMIO 21 */
				adi,int1-config = <1>; /* ADV76XX_INT1_CONFIG_ACTIVE_LOW */
				reset-gpios = <&gpio 91 0>; /* EMIO 13 */
				port@0 {
					reg = <0x0>;
				};
				port@1 {
					reg = <0x1>;
					adv7611: endpoint {
						remote-endpoint = <&axi_hdmi_rx>;
						bus-width = <24>;
						hsync-active = <0>; /* Parallel bus */
						vsync-active = <0>;
					};
				};
			};
		};
	};

	fragment@4 {
		target = <&amba>;
		__overlay__ {
			#address-cells = <2>;
			#size-cells = <2>;
			interrupt-parent = <&gic>;
			axi_vdma_0: axivdma@a0040000 {
				compatible = "xlnx,axi-vdma-1.00.a";
				reg = <0x0 0xa0040000 0x0 0x10000>;
				#address-cells = <1>;
				#size-cells = <1>;
				#dma-cells = <1>;
				#dma-channels = <1>;
				clock-names = "s_axi_lite_aclk", "m_axi_mm2s_aclk", "m_axi_mm2s_aclk";
				clocks = <&zynqmp_clk PL0_REF>, <&zynqmp_clk PL1_REF>, <&zynqmp_clk PL1_REF>;
				interrupt-parent = <&gic>;
				interrupts = <0 89 4>;
				dma-ranges = <0x00000000 0x00000000 0x80000000>;
				xlnx,num-fstores = <3>;
				xlnx,flush-fsync = <1>;
				xlnx,addrwidth = <32>;
				dma-channel@a0040000 {
					compatible = "xlnx,axi-vdma-mm2s-channel";
					interrupts = <0 89 4>; /* pl_ps_0[0] */
					xlnx,datawidth = <64>;
					xlnx,device-id = <0x0>;
				};
			};

			axi_hdmi_0: axi_hdmi@a0030000 {
				compatible = "adi,axi-hdmi-tx-1.00.a";
				reg = <0x0 0xa0030000 0x0 0x10000>;
				adi,is-rgb;
				dmas = <&axi_vdma_0 0>;
				dma-names = "video";
				clocks = <&clockgen 3>;
				port {
					axi_hdmi_out: endpoint {
						remote-endpoint = <&adv7511_in>;
					};
				};
			};

			axi_dmac: dmac@a0000000 {
				compatible = "adi,axi-dmac-1.00.a";
				reg = <0x0 0xa0000000 0x0 0x10000>;
				#dma-cells = <1>;
				interrupt-parent = <&gic>;
				interrupts = <0 90 4>; /* pl_ps_0[1] */
				clocks = <&zynqmp_clk PL0_REF>;

				adi,channels {
					#size-cells = <0>;
					#address-cells = <1>;
					dma-channel@0 {
						reg = <0>;
						adi,source-bus-width = <64>;
						adi,source-bus-type = <2>;
						adi,destination-bus-width = <64>;
						adi,destination-bus-type = <0>;
					};
				};
			};

			axi_hdmi_rx_core: axi-hdmi-rx@a0020000 {
				compatible = "adi,axi-hdmi-rx-1.00.a";
				reg = <0x0 0xa0020000 0x0 0x10000>;
				dmas = <&axi_dmac 0>;
				dma-names = "rx";
				gpios = <&gpioexf 3 0>; /* HPD, hotplug control (?) */

				port {
					#address-cells = <0>;
					#size-cells = <0>;

					axi_hdmi_rx: endpoint {
						remote-endpoint = <&adv7611>;
						bus-width = <24>;
						hsync-active = <0>; /* Parallel bus */
						vsync-active = <0>;
						pclk-sample = <1>; /* Sample on rising edge */
					};
				};
			};

			dyplo: dyplo@a0400000 {
				compatible = "topic,dyplo-1.00.a";
				reg = <0x0 0xA0400000 0x0 0x200000>;
				interrupt-parent = <&gic>;
				interrupts = <0 111 4>; /* pl_ps_irq1[7] */
				dma-coherent; /* HPC port with AxCACHE=0b1111 AxPROT=0b010*/
			};
		};
	};

	/* Ethernet PHY via EMIO. Logic contains a GMII to RGMII conversion, so
	 * the emac should see a GMII interface */
	fragment@5 {
		target = <&gem3>;
		__overlay__ {
			status = "okay";
			phy-handle = <&phy3>;
			phy-mode = "gmii";
			/* gem3 is the eth0 controller, hence we'll use the "0" mac for that */
			nvmem-cells = <&gem0_mac>;
			nvmem-cell-names = "mac-address";

			mdio {
				#address-cells = <1>;
				#size-cells = <0>;

				gmiitorgmii: gmiitorgmii@8 {
					compatible = "xlnx,gmii-to-rgmii-1.0";
					reg = <0x8>;
					phy-handle = <&phy3>;
				};

				phy3: ethernet-phy@3 {
					/* PHY on the board */
					device_type = "ethernet-phy";
					reg = <0x3>;
					interrupt-parent = <&gpio>;
					interrupts = <97 0x8>; /* GPIO 78+16+3, IRQ_TYPE_LEVEL_LOW */
					rxc-skew-ps = <1080>; /* Skew RX clock pad by 180 ps */
					txc-skew-ps = <840>;  /* Skew TX clock pad by -60 ps */
				};
			};
		};
	};

	fragment@6 {
		target = <&serdes>;
		__overlay__ {
			status = "okay";
		};
	};

	fragment@7 {
		target = <&sata>;
		__overlay__ {
			status = "okay";
			/* SATA OOB timing settings */
			ceva,p0-cominit-params = /bits/ 8 <0x18 0x40 0x18 0x28>;
			ceva,p0-comwake-params = /bits/ 8 <0x06 0x14 0x08 0x0E>;
			ceva,p0-burst-params = /bits/ 8 <0x13 0x08 0x4A 0x06>;
			ceva,p0-retry-params = /bits/ 16 <0x96A4 0x3FFC>;
			ceva,p1-cominit-params = /bits/ 8 <0x18 0x40 0x18 0x28>;
			ceva,p1-comwake-params = /bits/ 8 <0x06 0x14 0x08 0x0E>;
			ceva,p1-burst-params = /bits/ 8 <0x13 0x08 0x4A 0x06>;
			ceva,p1-retry-params = /bits/ 16 <0x96A4 0x3FFC>;
			/* For now, only try one instance */
			phy-names = "sata-phy", "sata-phy";
			/* Use refclock 0 at 150MHz for both instances */
			phys = <&lane0 PHY_TYPE_SATA 0 0 150000000>,
			       <&lane1 PHY_TYPE_SATA 1 0 150000000>;
			/* Using SI514 on miami through logic as REFCLK0. Must be programmed to 150MHz. */
			assigned-clocks = <&si514s>;
			assigned-clock-rates = <150000000>;
			/* Apparently doesn't work this way? */
			clocks = <&si514s>;
		};
	};
};
